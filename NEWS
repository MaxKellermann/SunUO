sunuo (0.1.2) unstable; urgency=low

  * another Mono bug workaround: pointer increments are 8 byte aligned,
    although Pack=1 is specified in the structure
  * exit on compiler error, don't allow the user to retry compilation

 --

sunuo (0.1.1) unstable; urgency=low

  * show operating system and runtime version in start banner
  * removed several compatibility fixes for old pre-0.1.0 versions of
    SunUO
  * recompile libraries automatically when a file has been changed,
    deleted or added added
  * added documentation for [restart workaround

 -- Max Kellermann <max@duempel.org>  Mon, 14 Feb 2005 22:40:42 +0100

sunuo (0.1.0) unstable; urgency=low

  * imported RunUO 1.0.0 sources, fork is called SunUO 0.1.0
  * wrote Makefile
  * some minor mono-mcs compilation fixes
  * replaced the overcomplex mono-compatibility unsafe code in
    TileMatrix.cs and TileMatrixPatch.cs by a simple Marshal.Copy
  * repaired pointer arithmetic in Serialization.cs and TileMatrix.cs
  * pass script file names in a temporary files, to go around the
    "argument too long" limitation on most POSIX systems
  * moved the World.Load() call from ScriptCompiler to Main
  * ScriptCompiler.m_Assemblies converted to ArrayList
  * removed method TileMatrix.Force(), which was good for nothing
  * added Core.BaseDirectoryInfo, Core.CacheDirectoryInfo,
    Core.LocalDirectoryInfo
  * support for multiple script libraries in ./local/src/ and
    ./local/lib/, every one of them is built into a separate DLL
  * log to ./var/log/console.log instead of ./Logs/Console.log
  * implemented a lot of exception handlers in Network/PacketHandlers.cs,
    Item.cs and Mobile.cs, to prevent the server from crashing when an
    exception in a script occurs
  * catch exceptions from Core.VerifySerialization(); dump
    LoaderExceptions
  * ignore case on data file names
  * implemented the configuration file "./etc/sunuo.xml", class
    Server.Config
  * added source and type ignores in LibraryConfig
  * wrap a script library in the new Library class
  * World.Load() dumps exceptions
  * added option to ignore AuthID
  * use string.Intern() to save memory

 -- Max Kellermann <max@duempel.org>  Sat,  5 Feb 2005 01:55:03 +0100
